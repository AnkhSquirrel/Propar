{% extends 'base.html.twig' %}

{% block title %}New Client{% endblock %}

{% block body %}

    <h1>Create new Client</h1>

    {{ include('client/_form.html.twig') }}

    <a href="{{ path('client_index') }}">back to list</a>

    <datalist id="addressList">
    </datalist>

    <div id="map" style="width: 500px; height: 200px">
    </div>


    <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css">
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>

    <script>

    //Instantiate map
    var map = L.map('map').setView([0,0], 16);

    L.tileLayer( 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>',
        subdomains: ['a','b','c']
    }).addTo( map );

    var fetchTrigger = 0;

    // Checks keyboard inputs
    $("#client_address").keyup(function(event) {
    
    // Stops default propagation
    event.preventDefault();
    event.stopPropagation();

    // Stops previous request
    clearTimeout(fetchTrigger);

    let addressInput = $("#client_address").val();

    // Empties the drop down list if input is empty, and stops the function
    if (addressInput.length === 0) {

        $('#addressList').empty();
        return false;

    }

    // Wait inactivity before sending the request
    fetchTrigger = setTimeout(function() {
        
        // https://api-adresse.data.gouv.fr/search/?q=addressInput&limit=10&autocomplete=1
        $.get('https://api-adresse.data.gouv.fr/search/', {

        q: addressInput,
        limit: 10,
        autocomplete: 1

        }, function(data) {

        let list = "";

        // Adds each address as an option
        $.each(data.features, function(i, obj) {

            list += '<option>' + obj.properties.name + " " + obj.properties.postcode + " " + obj.properties.city + '</option>';

        });

        $('#addressList').html(list);

        }, 'json');

        document.getElementById("client_address").addEventListener("change", updateMap);
        document.getElementById("client_address").addEventListener("input", updateMap);

    }, 300);

    });

    
    // Updates map (makes api request, clears markers, adds new marker, fly to marker)
    function updateMap() {

        var address = $("#client_address").val();
        if (address != '') {

            let fetchRes = fetch("https://api-adresse.data.gouv.fr/search/?q="+address+"&limit=1");

            fetchRes.then(res => res.json())
            .then(d => {

                if (d.features == "") {
                    
                } else {

                    // Removes previous markers
                    map.eachLayer((layer) => {

                        if (layer['_latlng'] != undefined)

                            layer.remove();

                    });

                        new L.GeoJSON(d.features[0]).addTo(map).bindPopup($("#client_address").val()).openPopup();;
                        map.flyTo([d.features[0].geometry.coordinates[1],d.features[0].geometry.coordinates[0]]);

                }
                    
            })
            
        }

    }



    </script>

{% endblock %}

